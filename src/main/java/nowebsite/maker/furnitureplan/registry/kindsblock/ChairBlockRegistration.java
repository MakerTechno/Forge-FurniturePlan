package nowebsite.maker.furnitureplan.registry.kindsblock;

import com.mojang.datafixers.DSL;
import net.minecraft.world.item.BlockItem;
import net.minecraft.world.item.Item;
import net.minecraft.world.level.block.Block;
import net.minecraft.world.level.block.Blocks;
import net.minecraft.world.level.block.WeatheringCopper;
import net.minecraft.world.level.block.entity.BlockEntityType;
import net.minecraft.world.level.block.entity.BlockEntityType.Builder;
import net.minecraft.world.level.block.state.BlockBehaviour.Properties;
import net.minecraftforge.registries.RegistryObject;
import nowebsite.maker.furnitureplan.blocks.singleblockfurniture.ChairBlock;
import nowebsite.maker.furnitureplan.blocks.columns.WeatheredCopperChair;
import nowebsite.maker.furnitureplan.blocks.singleblockfurniture.blockentities.ChairBlockEntity;
import nowebsite.maker.furnitureplan.registry.BlockRegistration;
import nowebsite.maker.furnitureplan.registry.ItemRegistration;
import org.jetbrains.annotations.Contract;
import org.jetbrains.annotations.NotNull;

public class ChairBlockRegistration {
    public static void init() {}

    public static final RegistryObject<ChairBlock> OAK_CHAIR = BlockRegistration.BLOCKS.register("oak_chair", () -> usageChairBlock(ChairBlockRegistration.OAK_CHAIR_ENTITY, Blocks.OAK_PLANKS));
    public static final RegistryObject<ChairBlock> COBBLESTONE_CHAIR = BlockRegistration.BLOCKS.register("cobblestone_chair", () -> usageChairBlock(ChairBlockRegistration.COBBLESTONE_CHAIR_ENTITY, Blocks.COBBLESTONE));
    public static final RegistryObject<ChairBlock> BRICK_CHAIR = BlockRegistration.BLOCKS.register("brick_chair", () -> usageChairBlock(ChairBlockRegistration.BRICK_CHAIR_ENTITY, Blocks.BRICKS));
    public static final RegistryObject<ChairBlock> STONE_BRICK_CHAIR = BlockRegistration.BLOCKS.register("stone_brick_chair", () -> usageChairBlock(ChairBlockRegistration.STONE_BRICK_CHAIR_ENTITY, Blocks.STONE_BRICKS));
    public static final RegistryObject<ChairBlock> MUD_BRICK_CHAIR = BlockRegistration.BLOCKS.register("mud_brick_chair", () -> usageChairBlock(ChairBlockRegistration.MUD_BRICK_CHAIR_ENTITY, Blocks.MUD_BRICKS));
    public static final RegistryObject<ChairBlock> NETHER_BRICK_CHAIR = BlockRegistration.BLOCKS.register("nether_brick_chair", () -> usageChairBlock(ChairBlockRegistration.NETHER_BRICK_CHAIR_ENTITY, Blocks.NETHER_BRICKS));
    public static final RegistryObject<ChairBlock> SANDSTONE_CHAIR = BlockRegistration.BLOCKS.register("sandstone_chair", () -> usageChairBlock(ChairBlockRegistration.SANDSTONE_CHAIR_ENTITY, Blocks.SANDSTONE));
    public static final RegistryObject<ChairBlock> SPRUCE_CHAIR = BlockRegistration.BLOCKS.register("spruce_chair", () -> usageChairBlock(ChairBlockRegistration.SPRUCE_CHAIR_ENTITY, Blocks.SPRUCE_PLANKS));
    public static final RegistryObject<ChairBlock> BIRCH_CHAIR = BlockRegistration.BLOCKS.register("birch_chair", () -> usageChairBlock(ChairBlockRegistration.BIRCH_CHAIR_ENTITY, Blocks.BIRCH_PLANKS));
    public static final RegistryObject<ChairBlock> JUNGLE_CHAIR = BlockRegistration.BLOCKS.register("jungle_chair", () -> usageChairBlock(ChairBlockRegistration.JUNGLE_CHAIR_ENTITY, Blocks.JUNGLE_PLANKS));
    public static final RegistryObject<ChairBlock> QUARTZ_CHAIR = BlockRegistration.BLOCKS.register("quartz_chair", () -> usageChairBlock(ChairBlockRegistration.QUARTZ_CHAIR_ENTITY, Blocks.QUARTZ_BLOCK));
    public static final RegistryObject<ChairBlock> ACACIA_CHAIR = BlockRegistration.BLOCKS.register("acacia_chair", () -> usageChairBlock(ChairBlockRegistration.ACACIA_CHAIR_ENTITY, Blocks.ACACIA_PLANKS));
    public static final RegistryObject<ChairBlock> CHERRY_CHAIR = BlockRegistration.BLOCKS.register("cherry_chair", () -> usageChairBlock(ChairBlockRegistration.CHERRY_CHAIR_ENTITY, Blocks.CHERRY_PLANKS));
    public static final RegistryObject<ChairBlock> DARK_OAK_CHAIR = BlockRegistration.BLOCKS.register("dark_oak_chair", () -> usageChairBlock(ChairBlockRegistration.DARK_OAK_CHAIR_ENTITY, Blocks.DARK_OAK_PLANKS));
    public static final RegistryObject<ChairBlock> MANGROVE_CHAIR = BlockRegistration.BLOCKS.register("mangrove_chair", () -> usageChairBlock(ChairBlockRegistration.MANGROVE_CHAIR_ENTITY, Blocks.MANGROVE_PLANKS));
    public static final RegistryObject<ChairBlock> BAMBOO_CHAIR = BlockRegistration.BLOCKS.register("bamboo_chair", () -> usageChairBlock(ChairBlockRegistration.BAMBOO_CHAIR_ENTITY, Blocks.BAMBOO_PLANKS));
    public static final RegistryObject<ChairBlock> BAMBOO_MOSAIC_CHAIR = BlockRegistration.BLOCKS.register("bamboo_mosaic_chair", () -> usageChairBlock(ChairBlockRegistration.BAMBOO_MOSAIC_CHAIR_ENTITY, Blocks.BAMBOO_MOSAIC));
    public static final RegistryObject<ChairBlock> PRISMARINE_CHAIR = BlockRegistration.BLOCKS.register("prismarine_chair", () -> usageChairBlock(ChairBlockRegistration.PRISMARINE_CHAIR_ENTITY, Blocks.PRISMARINE));
    public static final RegistryObject<ChairBlock> PRISMARINE_BRICK_CHAIR = BlockRegistration.BLOCKS.register("prismarine_brick_chair", () -> usageChairBlock(ChairBlockRegistration.PRISMARINE_BRICK_CHAIR_ENTITY, Blocks.PRISMARINE_BRICKS));
    public static final RegistryObject<ChairBlock> DARK_PRISMARINE_CHAIR = BlockRegistration.BLOCKS.register("dark_prismarine_chair", () -> usageChairBlock(ChairBlockRegistration.DARK_PRISMARINE_CHAIR_ENTITY, Blocks.DARK_PRISMARINE));
    public static final RegistryObject<ChairBlock> RED_SANDSTONE_CHAIR = BlockRegistration.BLOCKS.register("red_sandstone_chair", () -> usageChairBlock(ChairBlockRegistration.RED_SANDSTONE_CHAIR_ENTITY, Blocks.RED_SANDSTONE));
    public static final RegistryObject<ChairBlock> PURPUR_CHAIR = BlockRegistration.BLOCKS.register("purpur_chair", () -> usageChairBlock(ChairBlockRegistration.PURPUR_CHAIR_ENTITY, Blocks.PURPUR_BLOCK));
    public static final RegistryObject<ChairBlock> POLISHED_GRANITE_CHAIR = BlockRegistration.BLOCKS.register("polished_granite_chair", () -> usageChairBlock(ChairBlockRegistration.POLISHED_GRANITE_CHAIR_ENTITY, Blocks.POLISHED_GRANITE));
    public static final RegistryObject<ChairBlock> SMOOTH_RED_SANDSTONE_CHAIR = BlockRegistration.BLOCKS.register("smooth_red_sandstone_chair", () -> usageChairBlock(ChairBlockRegistration.SMOOTH_RED_SANDSTONE_CHAIR_ENTITY, Blocks.SMOOTH_RED_SANDSTONE));
    public static final RegistryObject<ChairBlock> MOSSY_STONE_BRICK_CHAIR = BlockRegistration.BLOCKS.register("mossy_stone_brick_chair", () -> usageChairBlock(ChairBlockRegistration.MOSSY_STONE_BRICK_CHAIR_ENTITY, Blocks.MOSSY_STONE_BRICKS));
    public static final RegistryObject<ChairBlock> POLISHED_DIORITE_CHAIR = BlockRegistration.BLOCKS.register("polished_diorite_chair", () -> usageChairBlock(ChairBlockRegistration.POLISHED_DIORITE_CHAIR_ENTITY, Blocks.POLISHED_DIORITE));
    public static final RegistryObject<ChairBlock> MOSSY_COBBLESTONE_CHAIR = BlockRegistration.BLOCKS.register("mossy_cobblestone_chair", () -> usageChairBlock(ChairBlockRegistration.MOSSY_COBBLESTONE_CHAIR_ENTITY, Blocks.MOSSY_COBBLESTONE));
    public static final RegistryObject<ChairBlock> END_STONE_BRICK_CHAIR = BlockRegistration.BLOCKS.register("end_stone_brick_chair", () -> usageChairBlock(ChairBlockRegistration.END_STONE_BRICK_CHAIR_ENTITY, Blocks.END_STONE_BRICKS));
    public static final RegistryObject<ChairBlock> STONE_CHAIR = BlockRegistration.BLOCKS.register("stone_chair", () -> usageChairBlock(ChairBlockRegistration.STONE_CHAIR_ENTITY, Blocks.STONE));
    public static final RegistryObject<ChairBlock> SMOOTH_SANDSTONE_CHAIR = BlockRegistration.BLOCKS.register("smooth_sandstone_chair", () -> usageChairBlock(ChairBlockRegistration.SMOOTH_SANDSTONE_CHAIR_ENTITY, Blocks.SMOOTH_SANDSTONE));
    public static final RegistryObject<ChairBlock> SMOOTH_QUARTZ_CHAIR = BlockRegistration.BLOCKS.register("smooth_quartz_chair", () -> usageChairBlock(ChairBlockRegistration.SMOOTH_QUARTZ_CHAIR_ENTITY, Blocks.SMOOTH_QUARTZ));
    public static final RegistryObject<ChairBlock> GRANITE_CHAIR = BlockRegistration.BLOCKS.register("granite_chair", () -> usageChairBlock(ChairBlockRegistration.GRANITE_CHAIR_ENTITY, Blocks.GRANITE));
    public static final RegistryObject<ChairBlock> ANDESITE_CHAIR = BlockRegistration.BLOCKS.register("andesite_chair", () -> usageChairBlock(ChairBlockRegistration.ANDESITE_CHAIR_ENTITY, Blocks.ANDESITE));
    public static final RegistryObject<ChairBlock> RED_NETHER_BRICK_CHAIR = BlockRegistration.BLOCKS.register("red_nether_brick_chair", () -> usageChairBlock(ChairBlockRegistration.RED_NETHER_BRICK_CHAIR_ENTITY, Blocks.RED_NETHER_BRICKS));
    public static final RegistryObject<ChairBlock> POLISHED_ANDESITE_CHAIR = BlockRegistration.BLOCKS.register("polished_andesite_chair", () -> usageChairBlock(ChairBlockRegistration.POLISHED_ANDESITE_CHAIR_ENTITY, Blocks.POLISHED_ANDESITE));
    public static final RegistryObject<ChairBlock> DIORITE_CHAIR = BlockRegistration.BLOCKS.register("diorite_chair", () -> usageChairBlock(ChairBlockRegistration.DIORITE_CHAIR_ENTITY, Blocks.DIORITE));
    public static final RegistryObject<ChairBlock> CRIMSON_CHAIR = BlockRegistration.BLOCKS.register("crimson_chair", () -> usageChairBlock(ChairBlockRegistration.CRIMSON_CHAIR_ENTITY, Blocks.CRIMSON_PLANKS));
    public static final RegistryObject<ChairBlock> WARPED_CHAIR = BlockRegistration.BLOCKS.register("warped_chair", () -> usageChairBlock(ChairBlockRegistration.WARPED_CHAIR_ENTITY, Blocks.WARPED_PLANKS));
    public static final RegistryObject<ChairBlock> BLACKSTONE_CHAIR = BlockRegistration.BLOCKS.register("blackstone_chair", () -> usageChairBlock(ChairBlockRegistration.BLACKSTONE_CHAIR_ENTITY, Blocks.BLACKSTONE));
    public static final RegistryObject<ChairBlock> POLISHED_BLACKSTONE_BRICK_CHAIR = BlockRegistration.BLOCKS.register("polished_blackstone_brick_chair", () -> usageChairBlock(ChairBlockRegistration.POLISHED_BLACKSTONE_BRICK_CHAIR_ENTITY, Blocks.POLISHED_BLACKSTONE_BRICKS));
    public static final RegistryObject<ChairBlock> POLISHED_BLACKSTONE_CHAIR = BlockRegistration.BLOCKS.register("polished_blackstone_chair", () -> usageChairBlock(ChairBlockRegistration.POLISHED_BLACKSTONE_CHAIR_ENTITY, Blocks.POLISHED_BLACKSTONE));
    public static final RegistryObject<WeatheredCopperChair> OXIDIZED_CUT_COPPER_CHAIR = BlockRegistration.BLOCKS.register("oxidized_cut_copper_chair", () -> usageWeatheredChair(ChairBlockRegistration.OXIDIZED_CUT_COPPER_CHAIR_ENTITY, Blocks.OXIDIZED_CUT_COPPER, WeatheringCopper.WeatherState.OXIDIZED));
    public static final RegistryObject<WeatheredCopperChair> WEATHERED_CUT_COPPER_CHAIR = BlockRegistration.BLOCKS.register("weathered_cut_copper_chair", () -> usageWeatheredChair(ChairBlockRegistration.WEATHERED_CUT_COPPER_CHAIR_ENTITY, Blocks.WEATHERED_CUT_COPPER, WeatheringCopper.WeatherState.WEATHERED));
    public static final RegistryObject<WeatheredCopperChair> EXPOSED_CUT_COPPER_CHAIR = BlockRegistration.BLOCKS.register("exposed_cut_copper_chair", () -> usageWeatheredChair(ChairBlockRegistration.EXPOSED_CUT_COPPER_CHAIR_ENTITY, Blocks.EXPOSED_CUT_COPPER, WeatheringCopper.WeatherState.EXPOSED));
    public static final RegistryObject<WeatheredCopperChair> CUT_COPPER_CHAIR = BlockRegistration.BLOCKS.register("cut_copper_chair", () -> usageWeatheredChair(ChairBlockRegistration.CUT_COPPER_CHAIR_ENTITY, Blocks.CUT_COPPER, WeatheringCopper.WeatherState.UNAFFECTED));
    public static final RegistryObject<ChairBlock> WAXED_OXIDIZED_CUT_COPPER_CHAIR = BlockRegistration.BLOCKS.register("waxed_oxidized_cut_copper_chair", () -> usageChairBlock(ChairBlockRegistration.WAXED_OXIDIZED_CUT_COPPER_CHAIR_ENTITY, Blocks.WAXED_OXIDIZED_CUT_COPPER));
    public static final RegistryObject<ChairBlock> WAXED_WEATHERED_CUT_COPPER_CHAIR = BlockRegistration.BLOCKS.register("waxed_weathered_cut_copper_chair", () -> usageChairBlock(ChairBlockRegistration.WAXED_WEATHERED_CUT_COPPER_CHAIR_ENTITY, Blocks.WAXED_WEATHERED_CUT_COPPER));
    public static final RegistryObject<ChairBlock> WAXED_EXPOSED_CUT_COPPER_CHAIR = BlockRegistration.BLOCKS.register("waxed_exposed_cut_copper_chair", () -> usageChairBlock(ChairBlockRegistration.WAXED_EXPOSED_CUT_COPPER_CHAIR_ENTITY, Blocks.WAXED_EXPOSED_CUT_COPPER));
    public static final RegistryObject<ChairBlock> WAXED_CUT_COPPER_CHAIR = BlockRegistration.BLOCKS.register("waxed_cut_copper_chair", () -> usageChairBlock(ChairBlockRegistration.WAXED_CUT_COPPER_CHAIR_ENTITY, Blocks.WAXED_CUT_COPPER));
    public static final RegistryObject<ChairBlock> COBBLED_DEEPSLATE_CHAIR = BlockRegistration.BLOCKS.register("cobbled_deepslate_chair", () -> usageChairBlock(ChairBlockRegistration.COBBLED_DEEPSLATE_CHAIR_ENTITY, Blocks.COBBLED_DEEPSLATE));
    public static final RegistryObject<ChairBlock> POLISHED_DEEPSLATE_CHAIR = BlockRegistration.BLOCKS.register("polished_deepslate_chair", () -> usageChairBlock(ChairBlockRegistration.POLISHED_DEEPSLATE_CHAIR_ENTITY, Blocks.POLISHED_DEEPSLATE));
    public static final RegistryObject<ChairBlock> DEEPSLATE_TILE_CHAIR = BlockRegistration.BLOCKS.register("deepslate_tile_chair", () -> usageChairBlock(ChairBlockRegistration.DEEPSLATE_TILE_CHAIR_ENTITY, Blocks.DEEPSLATE_TILES));
    public static final RegistryObject<ChairBlock> DEEPSLATE_BRICK_CHAIR = BlockRegistration.BLOCKS.register("deepslate_brick_chair", () -> usageChairBlock(ChairBlockRegistration.DEEPSLATE_BRICK_CHAIR_ENTITY, Blocks.DEEPSLATE_BRICKS));
    public static final RegistryObject<BlockItem> OAK_CHAIR_ITEM = ItemRegistration.ITEMS.register("oak_chair", () -> new BlockItem(OAK_CHAIR.get(), new Item.Properties()));
    public static final RegistryObject<BlockItem> COBBLESTONE_CHAIR_ITEM = ItemRegistration.ITEMS.register("cobblestone_chair", () -> new BlockItem(COBBLESTONE_CHAIR.get(), new Item.Properties()));
    public static final RegistryObject<BlockItem> BRICK_CHAIR_ITEM = ItemRegistration.ITEMS.register("brick_chair", () -> new BlockItem(BRICK_CHAIR.get(), new Item.Properties()));
    public static final RegistryObject<BlockItem> STONE_BRICK_CHAIR_ITEM = ItemRegistration.ITEMS.register("stone_brick_chair", () -> new BlockItem(STONE_BRICK_CHAIR.get(), new Item.Properties()));
    public static final RegistryObject<BlockItem> MUD_BRICK_CHAIR_ITEM = ItemRegistration.ITEMS.register("mud_brick_chair", () -> new BlockItem(MUD_BRICK_CHAIR.get(), new Item.Properties()));
    public static final RegistryObject<BlockItem> NETHER_BRICK_CHAIR_ITEM = ItemRegistration.ITEMS.register("nether_brick_chair", () -> new BlockItem(NETHER_BRICK_CHAIR.get(), new Item.Properties()));
    public static final RegistryObject<BlockItem> SANDSTONE_CHAIR_ITEM = ItemRegistration.ITEMS.register("sandstone_chair", () -> new BlockItem(SANDSTONE_CHAIR.get(), new Item.Properties()));
    public static final RegistryObject<BlockItem> SPRUCE_CHAIR_ITEM = ItemRegistration.ITEMS.register("spruce_chair", () -> new BlockItem(SPRUCE_CHAIR.get(), new Item.Properties()));
    public static final RegistryObject<BlockItem> BIRCH_CHAIR_ITEM = ItemRegistration.ITEMS.register("birch_chair", () -> new BlockItem(BIRCH_CHAIR.get(), new Item.Properties()));
    public static final RegistryObject<BlockItem> JUNGLE_CHAIR_ITEM = ItemRegistration.ITEMS.register("jungle_chair", () -> new BlockItem(JUNGLE_CHAIR.get(), new Item.Properties()));
    public static final RegistryObject<BlockItem> QUARTZ_CHAIR_ITEM = ItemRegistration.ITEMS.register("quartz_chair", () -> new BlockItem(QUARTZ_CHAIR.get(), new Item.Properties()));
    public static final RegistryObject<BlockItem> ACACIA_CHAIR_ITEM = ItemRegistration.ITEMS.register("acacia_chair", () -> new BlockItem(ACACIA_CHAIR.get(), new Item.Properties()));
    public static final RegistryObject<BlockItem> CHERRY_CHAIR_ITEM = ItemRegistration.ITEMS.register("cherry_chair", () -> new BlockItem(CHERRY_CHAIR.get(), new Item.Properties()));
    public static final RegistryObject<BlockItem> DARK_OAK_CHAIR_ITEM = ItemRegistration.ITEMS.register("dark_oak_chair", () -> new BlockItem(DARK_OAK_CHAIR.get(), new Item.Properties()));
    public static final RegistryObject<BlockItem> MANGROVE_CHAIR_ITEM = ItemRegistration.ITEMS.register("mangrove_chair", () -> new BlockItem(MANGROVE_CHAIR.get(), new Item.Properties()));
    public static final RegistryObject<BlockItem> BAMBOO_CHAIR_ITEM = ItemRegistration.ITEMS.register("bamboo_chair", () -> new BlockItem(BAMBOO_CHAIR.get(), new Item.Properties()));
    public static final RegistryObject<BlockItem> BAMBOO_MOSAIC_CHAIR_ITEM = ItemRegistration.ITEMS.register("bamboo_mosaic_chair", () -> new BlockItem(BAMBOO_MOSAIC_CHAIR.get(), new Item.Properties()));
    public static final RegistryObject<BlockItem> PRISMARINE_CHAIR_ITEM = ItemRegistration.ITEMS.register("prismarine_chair", () -> new BlockItem(PRISMARINE_CHAIR.get(), new Item.Properties()));
    public static final RegistryObject<BlockItem> PRISMARINE_BRICK_CHAIR_ITEM = ItemRegistration.ITEMS.register("prismarine_brick_chair", () -> new BlockItem(PRISMARINE_BRICK_CHAIR.get(), new Item.Properties()));
    public static final RegistryObject<BlockItem> DARK_PRISMARINE_CHAIR_ITEM = ItemRegistration.ITEMS.register("dark_prismarine_chair", () -> new BlockItem(DARK_PRISMARINE_CHAIR.get(), new Item.Properties()));
    public static final RegistryObject<BlockItem> RED_SANDSTONE_CHAIR_ITEM = ItemRegistration.ITEMS.register("red_sandstone_chair", () -> new BlockItem(RED_SANDSTONE_CHAIR.get(), new Item.Properties()));
    public static final RegistryObject<BlockItem> PURPUR_CHAIR_ITEM = ItemRegistration.ITEMS.register("purpur_chair", () -> new BlockItem(PURPUR_CHAIR.get(), new Item.Properties()));
    public static final RegistryObject<BlockItem> POLISHED_GRANITE_CHAIR_ITEM = ItemRegistration.ITEMS.register("polished_granite_chair", () -> new BlockItem(POLISHED_GRANITE_CHAIR.get(), new Item.Properties()));
    public static final RegistryObject<BlockItem> SMOOTH_RED_SANDSTONE_CHAIR_ITEM = ItemRegistration.ITEMS.register("smooth_red_sandstone_chair", () -> new BlockItem(SMOOTH_RED_SANDSTONE_CHAIR.get(), new Item.Properties()));
    public static final RegistryObject<BlockItem> MOSSY_STONE_BRICK_CHAIR_ITEM = ItemRegistration.ITEMS.register("mossy_stone_brick_chair", () -> new BlockItem(MOSSY_STONE_BRICK_CHAIR.get(), new Item.Properties()));
    public static final RegistryObject<BlockItem> POLISHED_DIORITE_CHAIR_ITEM = ItemRegistration.ITEMS.register("polished_diorite_chair", () -> new BlockItem(POLISHED_DIORITE_CHAIR.get(), new Item.Properties()));
    public static final RegistryObject<BlockItem> MOSSY_COBBLESTONE_CHAIR_ITEM = ItemRegistration.ITEMS.register("mossy_cobblestone_chair", () -> new BlockItem(MOSSY_COBBLESTONE_CHAIR.get(), new Item.Properties()));
    public static final RegistryObject<BlockItem> END_STONE_BRICK_CHAIR_ITEM = ItemRegistration.ITEMS.register("end_stone_brick_chair", () -> new BlockItem(END_STONE_BRICK_CHAIR.get(), new Item.Properties()));
    public static final RegistryObject<BlockItem> STONE_CHAIR_ITEM = ItemRegistration.ITEMS.register("stone_chair", () -> new BlockItem(STONE_CHAIR.get(), new Item.Properties()));
    public static final RegistryObject<BlockItem> SMOOTH_SANDSTONE_CHAIR_ITEM = ItemRegistration.ITEMS.register("smooth_sandstone_chair", () -> new BlockItem(SMOOTH_SANDSTONE_CHAIR.get(), new Item.Properties()));
    public static final RegistryObject<BlockItem> SMOOTH_QUARTZ_CHAIR_ITEM = ItemRegistration.ITEMS.register("smooth_quartz_chair", () -> new BlockItem(SMOOTH_QUARTZ_CHAIR.get(), new Item.Properties()));
    public static final RegistryObject<BlockItem> GRANITE_CHAIR_ITEM = ItemRegistration.ITEMS.register("granite_chair", () -> new BlockItem(GRANITE_CHAIR.get(), new Item.Properties()));
    public static final RegistryObject<BlockItem> ANDESITE_CHAIR_ITEM = ItemRegistration.ITEMS.register("andesite_chair", () -> new BlockItem(ANDESITE_CHAIR.get(), new Item.Properties()));
    public static final RegistryObject<BlockItem> RED_NETHER_BRICK_CHAIR_ITEM = ItemRegistration.ITEMS.register("red_nether_brick_chair", () -> new BlockItem(RED_NETHER_BRICK_CHAIR.get(), new Item.Properties()));
    public static final RegistryObject<BlockItem> POLISHED_ANDESITE_CHAIR_ITEM = ItemRegistration.ITEMS.register("polished_andesite_chair", () -> new BlockItem(POLISHED_ANDESITE_CHAIR.get(), new Item.Properties()));
    public static final RegistryObject<BlockItem> DIORITE_CHAIR_ITEM = ItemRegistration.ITEMS.register("diorite_chair", () -> new BlockItem(DIORITE_CHAIR.get(), new Item.Properties()));
    public static final RegistryObject<BlockItem> CRIMSON_CHAIR_ITEM = ItemRegistration.ITEMS.register("crimson_chair", () -> new BlockItem(CRIMSON_CHAIR.get(), new Item.Properties()));
    public static final RegistryObject<BlockItem> WARPED_CHAIR_ITEM = ItemRegistration.ITEMS.register("warped_chair", () -> new BlockItem(WARPED_CHAIR.get(), new Item.Properties()));
    public static final RegistryObject<BlockItem> BLACKSTONE_CHAIR_ITEM = ItemRegistration.ITEMS.register("blackstone_chair", () -> new BlockItem(BLACKSTONE_CHAIR.get(), new Item.Properties()));
    public static final RegistryObject<BlockItem> POLISHED_BLACKSTONE_BRICK_CHAIR_ITEM = ItemRegistration.ITEMS.register("polished_blackstone_brick_chair", () -> new BlockItem(POLISHED_BLACKSTONE_BRICK_CHAIR.get(), new Item.Properties()));
    public static final RegistryObject<BlockItem> POLISHED_BLACKSTONE_CHAIR_ITEM = ItemRegistration.ITEMS.register("polished_blackstone_chair", () -> new BlockItem(POLISHED_BLACKSTONE_CHAIR.get(), new Item.Properties()));
    public static final RegistryObject<BlockItem> OXIDIZED_CUT_COPPER_CHAIR_ITEM = ItemRegistration.ITEMS.register("oxidized_cut_copper_chair", () -> new BlockItem(OXIDIZED_CUT_COPPER_CHAIR.get(), new Item.Properties()));
    public static final RegistryObject<BlockItem> WEATHERED_CUT_COPPER_CHAIR_ITEM = ItemRegistration.ITEMS.register("weathered_cut_copper_chair", () -> new BlockItem(WEATHERED_CUT_COPPER_CHAIR.get(), new Item.Properties()));
    public static final RegistryObject<BlockItem> EXPOSED_CUT_COPPER_CHAIR_ITEM = ItemRegistration.ITEMS.register("exposed_cut_copper_chair", () -> new BlockItem(EXPOSED_CUT_COPPER_CHAIR.get(), new Item.Properties()));
    public static final RegistryObject<BlockItem> CUT_COPPER_CHAIR_ITEM = ItemRegistration.ITEMS.register("cut_copper_chair", () -> new BlockItem(CUT_COPPER_CHAIR.get(), new Item.Properties()));
    public static final RegistryObject<BlockItem> WAXED_OXIDIZED_CUT_COPPER_CHAIR_ITEM = ItemRegistration.ITEMS.register("waxed_oxidized_cut_copper_chair", () -> new BlockItem(WAXED_OXIDIZED_CUT_COPPER_CHAIR.get(), new Item.Properties()));
    public static final RegistryObject<BlockItem> WAXED_WEATHERED_CUT_COPPER_CHAIR_ITEM = ItemRegistration.ITEMS.register("waxed_weathered_cut_copper_chair", () -> new BlockItem(WAXED_WEATHERED_CUT_COPPER_CHAIR.get(), new Item.Properties()));
    public static final RegistryObject<BlockItem> WAXED_EXPOSED_CUT_COPPER_CHAIR_ITEM = ItemRegistration.ITEMS.register("waxed_exposed_cut_copper_chair", () -> new BlockItem(WAXED_EXPOSED_CUT_COPPER_CHAIR.get(), new Item.Properties()));
    public static final RegistryObject<BlockItem> WAXED_CUT_COPPER_CHAIR_ITEM = ItemRegistration.ITEMS.register("waxed_cut_copper_chair", () -> new BlockItem(WAXED_CUT_COPPER_CHAIR.get(), new Item.Properties()));
    public static final RegistryObject<BlockItem> COBBLED_DEEPSLATE_CHAIR_ITEM = ItemRegistration.ITEMS.register("cobbled_deepslate_chair", () -> new BlockItem(COBBLED_DEEPSLATE_CHAIR.get(), new Item.Properties()));
    public static final RegistryObject<BlockItem> POLISHED_DEEPSLATE_CHAIR_ITEM = ItemRegistration.ITEMS.register("polished_deepslate_chair", () -> new BlockItem(POLISHED_DEEPSLATE_CHAIR.get(), new Item.Properties()));
    public static final RegistryObject<BlockItem> DEEPSLATE_TILE_CHAIR_ITEM = ItemRegistration.ITEMS.register("deepslate_tile_chair", () -> new BlockItem(DEEPSLATE_TILE_CHAIR.get(), new Item.Properties()));
    public static final RegistryObject<BlockItem> DEEPSLATE_BRICK_CHAIR_ITEM = ItemRegistration.ITEMS.register("deepslate_brick_chair", () -> new BlockItem(DEEPSLATE_BRICK_CHAIR.get(), new Item.Properties()));
    public static final RegistryObject<BlockEntityType<ChairBlockEntity>> OAK_CHAIR_ENTITY = BlockRegistration.BLOCK_ENTITY.register("oak_chair", () -> Builder.of((pos, state) -> new ChairBlockEntity(ChairBlockRegistration.OAK_CHAIR_ENTITY, pos, state), OAK_CHAIR.get()).build(DSL.remainderType()));
    public static final RegistryObject<BlockEntityType<ChairBlockEntity>> COBBLESTONE_CHAIR_ENTITY = BlockRegistration.BLOCK_ENTITY.register("cobblestone_chair", () -> Builder.of((pos, state) -> new ChairBlockEntity(ChairBlockRegistration.COBBLESTONE_CHAIR_ENTITY, pos, state), COBBLESTONE_CHAIR.get()).build(DSL.remainderType()));
    public static final RegistryObject<BlockEntityType<ChairBlockEntity>> BRICK_CHAIR_ENTITY = BlockRegistration.BLOCK_ENTITY.register("brick_chair", () -> Builder.of((pos, state) -> new ChairBlockEntity(ChairBlockRegistration.BRICK_CHAIR_ENTITY, pos, state), BRICK_CHAIR.get()).build(DSL.remainderType()));
    public static final RegistryObject<BlockEntityType<ChairBlockEntity>> STONE_BRICK_CHAIR_ENTITY = BlockRegistration.BLOCK_ENTITY.register("stone_brick_chair", () -> Builder.of((pos, state) -> new ChairBlockEntity(ChairBlockRegistration.STONE_BRICK_CHAIR_ENTITY, pos, state), STONE_BRICK_CHAIR.get()).build(DSL.remainderType()));
    public static final RegistryObject<BlockEntityType<ChairBlockEntity>> MUD_BRICK_CHAIR_ENTITY = BlockRegistration.BLOCK_ENTITY.register("mud_brick_chair", () -> Builder.of((pos, state) -> new ChairBlockEntity(ChairBlockRegistration.MUD_BRICK_CHAIR_ENTITY, pos, state), MUD_BRICK_CHAIR.get()).build(DSL.remainderType()));
    public static final RegistryObject<BlockEntityType<ChairBlockEntity>> NETHER_BRICK_CHAIR_ENTITY = BlockRegistration.BLOCK_ENTITY.register("nether_brick_chair", () -> Builder.of((pos, state) -> new ChairBlockEntity(ChairBlockRegistration.NETHER_BRICK_CHAIR_ENTITY, pos, state), NETHER_BRICK_CHAIR.get()).build(DSL.remainderType()));
    public static final RegistryObject<BlockEntityType<ChairBlockEntity>> SANDSTONE_CHAIR_ENTITY = BlockRegistration.BLOCK_ENTITY.register("sandstone_chair", () -> Builder.of((pos, state) -> new ChairBlockEntity(ChairBlockRegistration.SANDSTONE_CHAIR_ENTITY, pos, state), SANDSTONE_CHAIR.get()).build(DSL.remainderType()));
    public static final RegistryObject<BlockEntityType<ChairBlockEntity>> SPRUCE_CHAIR_ENTITY = BlockRegistration.BLOCK_ENTITY.register("spruce_chair", () -> Builder.of((pos, state) -> new ChairBlockEntity(ChairBlockRegistration.SPRUCE_CHAIR_ENTITY, pos, state), SPRUCE_CHAIR.get()).build(DSL.remainderType()));
    public static final RegistryObject<BlockEntityType<ChairBlockEntity>> BIRCH_CHAIR_ENTITY = BlockRegistration.BLOCK_ENTITY.register("birch_chair", () -> Builder.of((pos, state) -> new ChairBlockEntity(ChairBlockRegistration.BIRCH_CHAIR_ENTITY, pos, state), BIRCH_CHAIR.get()).build(DSL.remainderType()));
    public static final RegistryObject<BlockEntityType<ChairBlockEntity>> JUNGLE_CHAIR_ENTITY = BlockRegistration.BLOCK_ENTITY.register("jungle_chair", () -> Builder.of((pos, state) -> new ChairBlockEntity(ChairBlockRegistration.JUNGLE_CHAIR_ENTITY, pos, state), JUNGLE_CHAIR.get()).build(DSL.remainderType()));
    public static final RegistryObject<BlockEntityType<ChairBlockEntity>> QUARTZ_CHAIR_ENTITY = BlockRegistration.BLOCK_ENTITY.register("quartz_chair", () -> Builder.of((pos, state) -> new ChairBlockEntity(ChairBlockRegistration.QUARTZ_CHAIR_ENTITY, pos, state), QUARTZ_CHAIR.get()).build(DSL.remainderType()));
    public static final RegistryObject<BlockEntityType<ChairBlockEntity>> ACACIA_CHAIR_ENTITY = BlockRegistration.BLOCK_ENTITY.register("acacia_chair", () -> Builder.of((pos, state) -> new ChairBlockEntity(ChairBlockRegistration.ACACIA_CHAIR_ENTITY, pos, state), ACACIA_CHAIR.get()).build(DSL.remainderType()));
    public static final RegistryObject<BlockEntityType<ChairBlockEntity>> CHERRY_CHAIR_ENTITY = BlockRegistration.BLOCK_ENTITY.register("cherry_chair", () -> Builder.of((pos, state) -> new ChairBlockEntity(ChairBlockRegistration.CHERRY_CHAIR_ENTITY, pos, state), CHERRY_CHAIR.get()).build(DSL.remainderType()));
    public static final RegistryObject<BlockEntityType<ChairBlockEntity>> DARK_OAK_CHAIR_ENTITY = BlockRegistration.BLOCK_ENTITY.register("dark_oak_chair", () -> Builder.of((pos, state) -> new ChairBlockEntity(ChairBlockRegistration.DARK_OAK_CHAIR_ENTITY, pos, state), DARK_OAK_CHAIR.get()).build(DSL.remainderType()));
    public static final RegistryObject<BlockEntityType<ChairBlockEntity>> MANGROVE_CHAIR_ENTITY = BlockRegistration.BLOCK_ENTITY.register("mangrove_chair", () -> Builder.of((pos, state) -> new ChairBlockEntity(ChairBlockRegistration.MANGROVE_CHAIR_ENTITY, pos, state), MANGROVE_CHAIR.get()).build(DSL.remainderType()));
    public static final RegistryObject<BlockEntityType<ChairBlockEntity>> BAMBOO_CHAIR_ENTITY = BlockRegistration.BLOCK_ENTITY.register("bamboo_chair", () -> Builder.of((pos, state) -> new ChairBlockEntity(ChairBlockRegistration.BAMBOO_CHAIR_ENTITY, pos, state), BAMBOO_CHAIR.get()).build(DSL.remainderType()));
    public static final RegistryObject<BlockEntityType<ChairBlockEntity>> BAMBOO_MOSAIC_CHAIR_ENTITY = BlockRegistration.BLOCK_ENTITY.register("bamboo_mosaic_chair", () -> Builder.of((pos, state) -> new ChairBlockEntity(ChairBlockRegistration.BAMBOO_MOSAIC_CHAIR_ENTITY, pos, state), BAMBOO_MOSAIC_CHAIR.get()).build(DSL.remainderType()));
    public static final RegistryObject<BlockEntityType<ChairBlockEntity>> PRISMARINE_CHAIR_ENTITY = BlockRegistration.BLOCK_ENTITY.register("prismarine_chair", () -> Builder.of((pos, state) -> new ChairBlockEntity(ChairBlockRegistration.PRISMARINE_CHAIR_ENTITY, pos, state), PRISMARINE_CHAIR.get()).build(DSL.remainderType()));
    public static final RegistryObject<BlockEntityType<ChairBlockEntity>> PRISMARINE_BRICK_CHAIR_ENTITY = BlockRegistration.BLOCK_ENTITY.register("prismarine_brick_chair", () -> Builder.of((pos, state) -> new ChairBlockEntity(ChairBlockRegistration.PRISMARINE_BRICK_CHAIR_ENTITY, pos, state), PRISMARINE_BRICK_CHAIR.get()).build(DSL.remainderType()));
    public static final RegistryObject<BlockEntityType<ChairBlockEntity>> DARK_PRISMARINE_CHAIR_ENTITY = BlockRegistration.BLOCK_ENTITY.register("dark_prismarine_chair", () -> Builder.of((pos, state) -> new ChairBlockEntity(ChairBlockRegistration.DARK_PRISMARINE_CHAIR_ENTITY, pos, state), DARK_PRISMARINE_CHAIR.get()).build(DSL.remainderType()));
    public static final RegistryObject<BlockEntityType<ChairBlockEntity>> RED_SANDSTONE_CHAIR_ENTITY = BlockRegistration.BLOCK_ENTITY.register("red_sandstone_chair", () -> Builder.of((pos, state) -> new ChairBlockEntity(ChairBlockRegistration.RED_SANDSTONE_CHAIR_ENTITY, pos, state), RED_SANDSTONE_CHAIR.get()).build(DSL.remainderType()));
    public static final RegistryObject<BlockEntityType<ChairBlockEntity>> PURPUR_CHAIR_ENTITY = BlockRegistration.BLOCK_ENTITY.register("purpur_chair", () -> Builder.of((pos, state) -> new ChairBlockEntity(ChairBlockRegistration.PURPUR_CHAIR_ENTITY, pos, state), PURPUR_CHAIR.get()).build(DSL.remainderType()));
    public static final RegistryObject<BlockEntityType<ChairBlockEntity>> POLISHED_GRANITE_CHAIR_ENTITY = BlockRegistration.BLOCK_ENTITY.register("polished_granite_chair", () -> Builder.of((pos, state) -> new ChairBlockEntity(ChairBlockRegistration.POLISHED_GRANITE_CHAIR_ENTITY, pos, state), POLISHED_GRANITE_CHAIR.get()).build(DSL.remainderType()));
    public static final RegistryObject<BlockEntityType<ChairBlockEntity>> SMOOTH_RED_SANDSTONE_CHAIR_ENTITY = BlockRegistration.BLOCK_ENTITY.register("smooth_red_sandstone_chair", () -> Builder.of((pos, state) -> new ChairBlockEntity(ChairBlockRegistration.SMOOTH_RED_SANDSTONE_CHAIR_ENTITY, pos, state), SMOOTH_RED_SANDSTONE_CHAIR.get()).build(DSL.remainderType()));
    public static final RegistryObject<BlockEntityType<ChairBlockEntity>> MOSSY_STONE_BRICK_CHAIR_ENTITY = BlockRegistration.BLOCK_ENTITY.register("mossy_stone_brick_chair", () -> Builder.of((pos, state) -> new ChairBlockEntity(ChairBlockRegistration.MOSSY_STONE_BRICK_CHAIR_ENTITY, pos, state), MOSSY_STONE_BRICK_CHAIR.get()).build(DSL.remainderType()));
    public static final RegistryObject<BlockEntityType<ChairBlockEntity>> POLISHED_DIORITE_CHAIR_ENTITY = BlockRegistration.BLOCK_ENTITY.register("polished_diorite_chair", () -> Builder.of((pos, state) -> new ChairBlockEntity(ChairBlockRegistration.POLISHED_DIORITE_CHAIR_ENTITY, pos, state), POLISHED_DIORITE_CHAIR.get()).build(DSL.remainderType()));
    public static final RegistryObject<BlockEntityType<ChairBlockEntity>> MOSSY_COBBLESTONE_CHAIR_ENTITY = BlockRegistration.BLOCK_ENTITY.register("mossy_cobblestone_chair", () -> Builder.of((pos, state) -> new ChairBlockEntity(ChairBlockRegistration.MOSSY_COBBLESTONE_CHAIR_ENTITY, pos, state), MOSSY_COBBLESTONE_CHAIR.get()).build(DSL.remainderType()));
    public static final RegistryObject<BlockEntityType<ChairBlockEntity>> END_STONE_BRICK_CHAIR_ENTITY = BlockRegistration.BLOCK_ENTITY.register("end_stone_brick_chair", () -> Builder.of((pos, state) -> new ChairBlockEntity(ChairBlockRegistration.END_STONE_BRICK_CHAIR_ENTITY, pos, state), END_STONE_BRICK_CHAIR.get()).build(DSL.remainderType()));
    public static final RegistryObject<BlockEntityType<ChairBlockEntity>> STONE_CHAIR_ENTITY = BlockRegistration.BLOCK_ENTITY.register("stone_chair", () -> Builder.of((pos, state) -> new ChairBlockEntity(ChairBlockRegistration.STONE_CHAIR_ENTITY, pos, state), STONE_CHAIR.get()).build(DSL.remainderType()));
    public static final RegistryObject<BlockEntityType<ChairBlockEntity>> SMOOTH_SANDSTONE_CHAIR_ENTITY = BlockRegistration.BLOCK_ENTITY.register("smooth_sandstone_chair", () -> Builder.of((pos, state) -> new ChairBlockEntity(ChairBlockRegistration.SMOOTH_SANDSTONE_CHAIR_ENTITY, pos, state), SMOOTH_SANDSTONE_CHAIR.get()).build(DSL.remainderType()));
    public static final RegistryObject<BlockEntityType<ChairBlockEntity>> SMOOTH_QUARTZ_CHAIR_ENTITY = BlockRegistration.BLOCK_ENTITY.register("smooth_quartz_chair", () -> Builder.of((pos, state) -> new ChairBlockEntity(ChairBlockRegistration.SMOOTH_QUARTZ_CHAIR_ENTITY, pos, state), SMOOTH_QUARTZ_CHAIR.get()).build(DSL.remainderType()));
    public static final RegistryObject<BlockEntityType<ChairBlockEntity>> GRANITE_CHAIR_ENTITY = BlockRegistration.BLOCK_ENTITY.register("granite_chair", () -> Builder.of((pos, state) -> new ChairBlockEntity(ChairBlockRegistration.GRANITE_CHAIR_ENTITY, pos, state), GRANITE_CHAIR.get()).build(DSL.remainderType()));
    public static final RegistryObject<BlockEntityType<ChairBlockEntity>> ANDESITE_CHAIR_ENTITY = BlockRegistration.BLOCK_ENTITY.register("andesite_chair", () -> Builder.of((pos, state) -> new ChairBlockEntity(ChairBlockRegistration.ANDESITE_CHAIR_ENTITY, pos, state), ANDESITE_CHAIR.get()).build(DSL.remainderType()));
    public static final RegistryObject<BlockEntityType<ChairBlockEntity>> RED_NETHER_BRICK_CHAIR_ENTITY = BlockRegistration.BLOCK_ENTITY.register("red_nether_brick_chair", () -> Builder.of((pos, state) -> new ChairBlockEntity(ChairBlockRegistration.RED_NETHER_BRICK_CHAIR_ENTITY, pos, state), RED_NETHER_BRICK_CHAIR.get()).build(DSL.remainderType()));
    public static final RegistryObject<BlockEntityType<ChairBlockEntity>> POLISHED_ANDESITE_CHAIR_ENTITY = BlockRegistration.BLOCK_ENTITY.register("polished_andesite_chair", () -> Builder.of((pos, state) -> new ChairBlockEntity(ChairBlockRegistration.POLISHED_ANDESITE_CHAIR_ENTITY, pos, state), POLISHED_ANDESITE_CHAIR.get()).build(DSL.remainderType()));
    public static final RegistryObject<BlockEntityType<ChairBlockEntity>> DIORITE_CHAIR_ENTITY = BlockRegistration.BLOCK_ENTITY.register("diorite_chair", () -> Builder.of((pos, state) -> new ChairBlockEntity(ChairBlockRegistration.DIORITE_CHAIR_ENTITY, pos, state), DIORITE_CHAIR.get()).build(DSL.remainderType()));
    public static final RegistryObject<BlockEntityType<ChairBlockEntity>> CRIMSON_CHAIR_ENTITY = BlockRegistration.BLOCK_ENTITY.register("crimson_chair", () -> Builder.of((pos, state) -> new ChairBlockEntity(ChairBlockRegistration.CRIMSON_CHAIR_ENTITY, pos, state), CRIMSON_CHAIR.get()).build(DSL.remainderType()));
    public static final RegistryObject<BlockEntityType<ChairBlockEntity>> WARPED_CHAIR_ENTITY = BlockRegistration.BLOCK_ENTITY.register("warped_chair", () -> Builder.of((pos, state) -> new ChairBlockEntity(ChairBlockRegistration.WARPED_CHAIR_ENTITY, pos, state), WARPED_CHAIR.get()).build(DSL.remainderType()));
    public static final RegistryObject<BlockEntityType<ChairBlockEntity>> BLACKSTONE_CHAIR_ENTITY = BlockRegistration.BLOCK_ENTITY.register("blackstone_chair", () -> Builder.of((pos, state) -> new ChairBlockEntity(ChairBlockRegistration.BLACKSTONE_CHAIR_ENTITY, pos, state), BLACKSTONE_CHAIR.get()).build(DSL.remainderType()));
    public static final RegistryObject<BlockEntityType<ChairBlockEntity>> POLISHED_BLACKSTONE_BRICK_CHAIR_ENTITY = BlockRegistration.BLOCK_ENTITY.register("polished_blackstone_brick_chair", () -> Builder.of((pos, state) -> new ChairBlockEntity(ChairBlockRegistration.POLISHED_BLACKSTONE_BRICK_CHAIR_ENTITY, pos, state), POLISHED_BLACKSTONE_BRICK_CHAIR.get()).build(DSL.remainderType()));
    public static final RegistryObject<BlockEntityType<ChairBlockEntity>> POLISHED_BLACKSTONE_CHAIR_ENTITY = BlockRegistration.BLOCK_ENTITY.register("polished_blackstone_chair", () -> Builder.of((pos, state) -> new ChairBlockEntity(ChairBlockRegistration.POLISHED_BLACKSTONE_CHAIR_ENTITY, pos, state), POLISHED_BLACKSTONE_CHAIR.get()).build(DSL.remainderType()));
    public static final RegistryObject<BlockEntityType<ChairBlockEntity>> OXIDIZED_CUT_COPPER_CHAIR_ENTITY = BlockRegistration.BLOCK_ENTITY.register("oxidized_cut_copper_chair", () -> Builder.of((pos, state) -> new ChairBlockEntity(ChairBlockRegistration.OXIDIZED_CUT_COPPER_CHAIR_ENTITY, pos, state), OXIDIZED_CUT_COPPER_CHAIR.get()).build(DSL.remainderType()));
    public static final RegistryObject<BlockEntityType<ChairBlockEntity>> WEATHERED_CUT_COPPER_CHAIR_ENTITY = BlockRegistration.BLOCK_ENTITY.register("weathered_cut_copper_chair", () -> Builder.of((pos, state) -> new ChairBlockEntity(ChairBlockRegistration.WEATHERED_CUT_COPPER_CHAIR_ENTITY, pos, state), WEATHERED_CUT_COPPER_CHAIR.get()).build(DSL.remainderType()));
    public static final RegistryObject<BlockEntityType<ChairBlockEntity>> EXPOSED_CUT_COPPER_CHAIR_ENTITY = BlockRegistration.BLOCK_ENTITY.register("exposed_cut_copper_chair", () -> Builder.of((pos, state) -> new ChairBlockEntity(ChairBlockRegistration.EXPOSED_CUT_COPPER_CHAIR_ENTITY, pos, state), EXPOSED_CUT_COPPER_CHAIR.get()).build(DSL.remainderType()));
    public static final RegistryObject<BlockEntityType<ChairBlockEntity>> CUT_COPPER_CHAIR_ENTITY = BlockRegistration.BLOCK_ENTITY.register("cut_copper_chair", () -> Builder.of((pos, state) -> new ChairBlockEntity(ChairBlockRegistration.CUT_COPPER_CHAIR_ENTITY, pos, state), CUT_COPPER_CHAIR.get()).build(DSL.remainderType()));
    public static final RegistryObject<BlockEntityType<ChairBlockEntity>> WAXED_OXIDIZED_CUT_COPPER_CHAIR_ENTITY = BlockRegistration.BLOCK_ENTITY.register("waxed_oxidized_cut_copper_chair", () -> Builder.of((pos, state) -> new ChairBlockEntity(ChairBlockRegistration.WAXED_OXIDIZED_CUT_COPPER_CHAIR_ENTITY, pos, state), WAXED_OXIDIZED_CUT_COPPER_CHAIR.get()).build(DSL.remainderType()));
    public static final RegistryObject<BlockEntityType<ChairBlockEntity>> WAXED_WEATHERED_CUT_COPPER_CHAIR_ENTITY = BlockRegistration.BLOCK_ENTITY.register("waxed_weathered_cut_copper_chair", () -> Builder.of((pos, state) -> new ChairBlockEntity(ChairBlockRegistration.WAXED_WEATHERED_CUT_COPPER_CHAIR_ENTITY, pos, state), WAXED_WEATHERED_CUT_COPPER_CHAIR.get()).build(DSL.remainderType()));
    public static final RegistryObject<BlockEntityType<ChairBlockEntity>> WAXED_EXPOSED_CUT_COPPER_CHAIR_ENTITY = BlockRegistration.BLOCK_ENTITY.register("waxed_exposed_cut_copper_chair", () -> Builder.of((pos, state) -> new ChairBlockEntity(ChairBlockRegistration.WAXED_EXPOSED_CUT_COPPER_CHAIR_ENTITY, pos, state), WAXED_EXPOSED_CUT_COPPER_CHAIR.get()).build(DSL.remainderType()));
    public static final RegistryObject<BlockEntityType<ChairBlockEntity>> WAXED_CUT_COPPER_CHAIR_ENTITY = BlockRegistration.BLOCK_ENTITY.register("waxed_cut_copper_chair", () -> Builder.of((pos, state) -> new ChairBlockEntity(ChairBlockRegistration.WAXED_CUT_COPPER_CHAIR_ENTITY, pos, state), WAXED_CUT_COPPER_CHAIR.get()).build(DSL.remainderType()));
    public static final RegistryObject<BlockEntityType<ChairBlockEntity>> COBBLED_DEEPSLATE_CHAIR_ENTITY = BlockRegistration.BLOCK_ENTITY.register("cobbled_deepslate_chair", () -> Builder.of((pos, state) -> new ChairBlockEntity(ChairBlockRegistration.COBBLED_DEEPSLATE_CHAIR_ENTITY, pos, state), COBBLED_DEEPSLATE_CHAIR.get()).build(DSL.remainderType()));
    public static final RegistryObject<BlockEntityType<ChairBlockEntity>> POLISHED_DEEPSLATE_CHAIR_ENTITY = BlockRegistration.BLOCK_ENTITY.register("polished_deepslate_chair", () -> Builder.of((pos, state) -> new ChairBlockEntity(ChairBlockRegistration.POLISHED_DEEPSLATE_CHAIR_ENTITY, pos, state), POLISHED_DEEPSLATE_CHAIR.get()).build(DSL.remainderType()));
    public static final RegistryObject<BlockEntityType<ChairBlockEntity>> DEEPSLATE_TILE_CHAIR_ENTITY = BlockRegistration.BLOCK_ENTITY.register("deepslate_tile_chair", () -> Builder.of((pos, state) -> new ChairBlockEntity(ChairBlockRegistration.DEEPSLATE_TILE_CHAIR_ENTITY, pos, state), DEEPSLATE_TILE_CHAIR.get()).build(DSL.remainderType()));
    public static final RegistryObject<BlockEntityType<ChairBlockEntity>> DEEPSLATE_BRICK_CHAIR_ENTITY = BlockRegistration.BLOCK_ENTITY.register("deepslate_brick_chair", () -> Builder.of((pos, state) -> new ChairBlockEntity(ChairBlockRegistration.DEEPSLATE_BRICK_CHAIR_ENTITY, pos, state), DEEPSLATE_BRICK_CHAIR.get()).build(DSL.remainderType()));

    @Contract("_, _ -> new")
    public static @NotNull ChairBlock usageChairBlock(RegistryObject<BlockEntityType<ChairBlockEntity>> type, @NotNull Block propertyBlock) {
        return new ChairBlock(type, propertyBlock.defaultBlockState(), Properties.copy(propertyBlock));
    }

    @Contract("_, _, _ -> new")
    public static @NotNull WeatheredCopperChair usageWeatheredChair(RegistryObject<BlockEntityType<ChairBlockEntity>> type, @NotNull Block propertyBlock, WeatheringCopper.WeatherState weatherState) {
        return new WeatheredCopperChair(type, propertyBlock.defaultBlockState(), Properties.copy(propertyBlock), weatherState);
    }

}
